buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
    }

}
allprojects {
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: 'maven-publish'
    repositories {
        mavenLocal()
        maven {
            allowInsecureProtocol = true
            url "http://maven.wcpe.top/repository/maven-public/"
        }
        mavenCentral()
        gradlePluginPortal()
    }
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    version = '1.0.10'
    group 'top.wcpe.wcpelib'
    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
        from('src/main/java') {
            include '**/*.xml'
        }
        from('src/main/kotlin') {
            include '**/*.xml'
        }
    }
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    dependencies {
        implementation "org.msgpack:msgpack-core:0.9.0"
        implementation "redis.clients:jedis:3.6.0"
        implementation "org.slf4j:slf4j-api:1.7.33"
        implementation "ch.qos.logback:logback-core:1.2.10"
        implementation "ch.qos.logback:logback-classic:1.2.10"
        implementation "ch.qos.logback:logback-access:1.2.10"
        implementation "mysql:mysql-connector-java:5.1.35"
        implementation "org.mybatis:mybatis:3.5.6"
        implementation 'com.alibaba:druid:1.2.8'
        implementation "org.quartz-scheduler:quartz:2.3.0"
        implementation "com.google.code.gson:gson:2.8.9"
        implementation "com.squareup.moshi:moshi:1.13.0"
        implementation "com.squareup.moshi:moshi-kotlin:1.13.0"
        implementation "dev.zacsweers.moshix:moshi-metadata-reflect:0.17.0"

        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'
        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }
    test {
        useJUnitPlatform()
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }


    publishing {
        publications {
            mavenJava(MavenPublication) {

                groupId project.group
                artifactId project.name
                version project.version
                from components.java
                artifact sourcesJar
            }
        }
        repositories {
            maven {
                credentials {
                    allowInsecureProtocol = true
                    username = project.findProperty("username").toString()
                    password = project.findProperty("password").toString()
                }
                def releasesRepoUrl = "http://maven.wcpe.top/repository/maven-releases/"
                def snapshotsRepoUrl = "http://maven.wcpe.top/repository/maven-snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}